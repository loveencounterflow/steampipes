{
  "version": 3,
  "file": "wye2.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/wye2.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'STEAMPIPES/TESTS/WYE2'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nOS                        = require 'os'\ntest                      = require 'guy-test'\n#...........................................................................................................\nSP                        = require '../..'\n{ $\n  $async\n  $drain\n  $watch\n  $show  }                = SP.export()\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tentative implementation\" ] = ( T, done ) ->\n  [ probe, matcher, error, ] = [\"abcde\",\"(a)A(b)B(c)C(d)D(e)E\",null]\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    pipeline  = []\n    t1        = $ ( d, send ) ->\n      send d\n      wye.send \"(#{d})\"\n    wye        = SP.$pass()\n    pipeline.push probe\n    pipeline.push t1\n    pipeline.push $ ( d, send ) -> send d.toUpperCase()\n    pipeline.push wye\n    pipeline.push $drain ( Σ ) -> resolve Σ.join ''\n    SP.pull pipeline...\n    return null\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"leapfrogging compared to wye\" ] = ( T, done ) ->\n  [ probe, matcher, error, ] = [\"abcde\",\"aBCdE\",null]\n  results = []\n  #.........................................................................................................\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    pipeline  = []\n    pipeline.push probe\n    pipeline.push $ ( d, send ) ->\n      if ( d.match /a|d/ )?  then  wye.send d\n      else                        send d\n    pipeline.push $ ( d, send ) -> send d.toUpperCase()\n    pipeline.push wye = SP.$pass()\n    pipeline.push $drain ( Σ ) ->\n      results.push R = Σ.join ''\n      resolve R\n    SP.pull pipeline...\n    return null\n  #.........................................................................................................\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    leapfrog  = ( d ) -> ( d.match /a|d/ )?\n    pipeline  = []\n    pipeline.push probe\n    pipeline.push $ { leapfrog, }, ( d, send ) -> send d.toUpperCase()\n    pipeline.push wye = SP.$pass()\n    pipeline.push $drain ( Σ ) ->\n      results.push R = Σ.join ''\n      resolve R\n    SP.pull pipeline...\n    return null\n  #.........................................................................................................\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    pipeline    = []\n    pipeline.push probe\n    # pipeline.push $show()\n    pipeline.push SP.leapfrog ( ( d ) -> ( d.match /a|d/ )? ), $ ( d, send ) -> send d.toUpperCase()\n    pipeline.push wye = SP.$pass()\n    pipeline.push $drain ( Σ ) ->\n      results.push R = Σ.join ''\n      resolve R\n    SP.pull pipeline...\n    return null\n  #.........................................................................................................\n  T.eq results.length, 3\n  T.eq results...\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"wye 2\" ] = ( T, done ) ->\n  [ probe, matcher, error, ] = [\"a\",\"[a](a)A\",null]\n  # [ probe, matcher, error, ] = ['abcde','A(a)B(b)C(c)D(d)E(e)',null]\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    t1 = $ ( d, send ) ->\n      wye.send \"[#{d}]\"\n      wye.send \"(#{d})\"\n      send d\n    pipeline  = []\n    pipeline.push probe\n    pipeline.push t1\n    pipeline.push $ ( d, send ) -> send d.toUpperCase()\n    pipeline.push wye = SP.$pass()\n    pipeline.push $drain ( Σ ) -> resolve Σ.join ''\n    SP.pull pipeline...\n    return null\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"wye 3\" ] = ( T, done ) ->\n  [ probe, matcher, error, ] = [[24],[12,6,3,10,5,16,8,4,2,1],null]\n  # [ probe, matcher, error, ] = ['abcde','A(a)B(b)C(c)D(d)E(e)',null]\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    source    = SP.new_push_source()\n    pipeline  = []\n    pipeline.push source\n    # pipeline.push wye = SP.$pass()\n    # pipeline.push $show()\n    pipeline.push $ ( d, send ) -> send if ( d %% 2 is 0 ) then ( d / 2 ) else ( d * 3 + 1 )\n    pipeline.push $show()\n    pipeline.push $ ( d, send ) -> send d; if ( d is 1 ) then source.end() else source.send d\n    pipeline.push $drain ( Σ ) -> resolve Σ\n    SP.pull pipeline...\n    source.send d for d in probe\n    return null\n  #.........................................................................................................\n  done()\n  return null\n\n\n\n############################################################################################################\nunless module.parent?\n  test @, 'timeout': 30000\n  # test @[ \"leapfrogging compared to wye\" ]\n  # test @[ \"wye 3\" ]\n\n\n\n\n\n\n\n"
  ]
}