{
  "version": 3,
  "file": "html-parser.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/html-parser.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'STEAMPIPES/TESTS/HTML-PARSER'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nOS                        = require 'os'\ntest                      = require 'guy-test'\n#...........................................................................................................\n# SP                        = require '../..'\n# { $\n#   $async\n#   $watch\n#   $show  }                = SP.export()\n#...........................................................................................................\ntypes                     = require '../types'\n{ isa\n  validate\n  type_of }               = types\n#...........................................................................................................\nread                      = ( path ) -> FS.readFileSync path, { encoding: 'utf-8', }\ndefer                     = setImmediate\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\njr                        = JSON.stringify\n\n\n#-----------------------------------------------------------------------------------------------------------\nprobes_and_matchers = [\n  [\"<!DOCTYPE html>\",[{\"data\":{\"html\":true},\"$key\":\"<!DOCTYPE\"}],null]\n  [\"<title>MKTS</title>\",[{\"$key\":\"<title\"},{\"text\":\"MKTS\",\"$key\":\"^text\"},{\"$key\":\">title\"}],null]\n  [\"<document/>\",[{\"$key\":\"<document\"},{\"$key\":\">document\"}],null]\n  [\"<foo bar baz=42>\",[{\"data\":{\"bar\":true,\"baz\":\"42\"},\"$key\":\"<foo\"}],null]\n  [\"<br/>\",[{\"$key\":\"<br\"},{\"$key\":\">br\"}],null]\n  [\"</thing>\",[{\"$key\":\">thing\"}],null]\n  [\"</foo>\",[{\"$key\":\">foo\"}],null]\n  [\"</document>\",[{\"$key\":\">document\"}],null]\n  [\"<title>MKTS</title>\",[{\"$key\":\"<title\"},{\"text\":\"MKTS\",\"$key\":\"^text\"},{\"$key\":\">title\"}],null]\n  [\"<p foo bar=42>omg</p>\",[{\"data\":{\"foo\":true,\"bar\":\"42\"},\"is_block\":true,\"$key\":\"<p\"},{\"text\":\"omg\",\"$key\":\"^text\"},{\"is_block\":true,\"$key\":\">p\"}],null]\n  [\"<document/><foo bar baz=42>something<br/>else</thing></foo>\",[{\"$key\":\"<document\"},{\"$key\":\">document\"},{\"data\":{\"bar\":true,\"baz\":\"42\"},\"$key\":\"<foo\"},{\"text\":\"something\",\"$key\":\"^text\"},{\"$key\":\"<br\"},{\"$key\":\">br\"},{\"text\":\"else\",\"$key\":\"^text\"},{\"$key\":\">thing\"},{\"$key\":\">foo\"}],null]\n  [\"<!DOCTYPE html><html lang=en><head><title>x</title></head><p data-x='<'>helo</p></html>\",[{\"data\":{\"html\":true},\"$key\":\"<!DOCTYPE\"},{\"data\":{\"lang\":\"en\"},\"$key\":\"<html\"},{\"$key\":\"<head\"},{\"$key\":\"<title\"},{\"text\":\"x\",\"$key\":\"^text\"},{\"$key\":\">title\"},{\"$key\":\">head\"},{\"data\":{\"data-x\":\"<\"},\"is_block\":true,\"$key\":\"<p\"},{\"text\":\"helo\",\"$key\":\"^text\"},{\"is_block\":true,\"$key\":\">p\"},{\"$key\":\">html\"}],null]\n  [\"<p foo bar=42><em>Yaffir stood high</em></p>\",[{\"data\":{\"foo\":true,\"bar\":\"42\"},\"is_block\":true,\"$key\":\"<p\"},{\"$key\":\"<em\"},{\"text\":\"Yaffir stood high\",\"$key\":\"^text\"},{\"$key\":\">em\"},{\"is_block\":true,\"$key\":\">p\"}],null]\n  [\"<p foo bar=42><em><xxxxxxxxxxxxxxxxxxx>Yaffir stood high</p>\",[{\"data\":{\"foo\":true,\"bar\":\"42\"},\"is_block\":true,\"$key\":\"<p\"},{\"$key\":\"<em\"},{\"$key\":\"<xxxxxxxxxxxxxxxxxxx\"},{\"text\":\"Yaffir stood high\",\"$key\":\"^text\"},{\"is_block\":true,\"$key\":\">p\"}],null]\n  [\"<p föö bär=42><em>Yaffir stood high</p>\",[{\"data\":{\"föö\":true,\"bär\":\"42\"},\"is_block\":true,\"$key\":\"<p\"},{\"$key\":\"<em\"},{\"text\":\"Yaffir stood high\",\"$key\":\"^text\"},{\"is_block\":true,\"$key\":\">p\"}],null]\n  [\"<document 文=zh/><foo bar baz=42>something<br/>else</thing></foo>\",[{\"data\":{\"文\":\"zh\"},\"$key\":\"<document\"},{\"$key\":\">document\"},{\"data\":{\"bar\":true,\"baz\":\"42\"},\"$key\":\"<foo\"},{\"text\":\"something\",\"$key\":\"^text\"},{\"$key\":\"<br\"},{\"$key\":\">br\"},{\"text\":\"else\",\"$key\":\"^text\"},{\"$key\":\">thing\"},{\"$key\":\">foo\"}],null]\n  [\"<p foo bar=<>yeah</p>\",[{\"data\":{\"foo\":true,\"bar\":\"<\"},\"is_block\":true,\"$key\":\"<p\"},{\"text\":\"yeah\",\"$key\":\"^text\"},{\"is_block\":true,\"$key\":\">p\"}],null]\n  [\"<p foo bar='<'>yeah</p>\",[{\"data\":{\"foo\":true,\"bar\":\"<\"},\"is_block\":true,\"$key\":\"<p\"},{\"text\":\"yeah\",\"$key\":\"^text\"},{\"is_block\":true,\"$key\":\">p\"}],null]\n  [\"<p foo bar='&lt;'>yeah</p>\",[{\"data\":{\"foo\":true,\"bar\":\"&lt;\"},\"is_block\":true,\"$key\":\"<p\"},{\"text\":\"yeah\",\"$key\":\"^text\"},{\"is_block\":true,\"$key\":\">p\"}],null]\n  [\"<<<<<\",[{\"text\":\"<<<<\",\"$key\":\"^text\"}],null]\n  [\"something\",[{\"text\":\"something\",\"$key\":\"^text\"}],null]\n  [\"else\",[{\"text\":\"else\",\"$key\":\"^text\"}],null]\n  [\"<p>dangling\",[{\"is_block\":true,\"$key\":\"<p\"},{\"text\":\"dangling\",\"$key\":\"^text\"}],null]\n  [\"𦇻𦑛𦖵𦩮𦫦𧞈\",[{\"text\":\"𦇻𦑛𦖵𦩮𦫦𧞈\",\"$key\":\"^text\"}],null]\n  ]\n\n#-----------------------------------------------------------------------------------------------------------\nshow = ( html, datoms ) ->\n  help CND.red html\n  for d in datoms\n    if d.text?\n      info d.$key, ( CND.white jr d.text )\n    else\n      if d.data? # and ( Object.keys d.data ).length > 0\n        info d.$key, ( CND.yellow jr d.data )\n      else\n        info d.$key\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"parse html to list (onepiece)\" ] = ( T, done ) ->\n  SP = require '../..'\n  T.eq ( type_of SP.HTML.new_onepiece_parser ), 'function'\n  parse = SP.HTML.new_onepiece_parser()\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      html    = probe\n      result  = parse html\n      # show html, result\n      resolve result\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n      # R           = []\n      # source      = probe\n      # #.....................................................................................................\n      # pipeline_A  = []\n      # pipeline_A.push source\n      # pipeline_A.push SP.$watch ( d ) -> info xrpr d\n      # pipeline_A.push SP.$collect { collector: R, }\n      # length_of_A = pipeline_A.length\n      # duct_A = SP.pull pipeline_A...\n      # T.eq duct_A.transforms.length,  length_of_A\n      # T.eq duct_A.type,               'source'\n\n############################################################################################################\nunless module.parent?\n  # test @, 'timeout': 30000\n  test @[ \"parse html to list (onepiece)\" ]\n\n\n\n\n\n\n\n"
  ]
}